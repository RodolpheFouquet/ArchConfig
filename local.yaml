- hosts: localhost
  vars:
    user: vachicorne
    sddm_theme: catppuccin-frappe
    aur_builder: aur_builder
  vars_files:
    - variables.yml
  become: true
  tasks:
  - name: Add Vachicorne user
    ansible.builtin.user:
      name:  "{{ user }}"
      password: "{{ password| password_hash('sha512', salt) }}"
      group: wheel
      shell: /usr/bin/fish
  - name: Add AUR Builder user
    ansible.builtin.user:
      name: "{{ aur_builder }}"
  - name: Add AUR builder to sudoers
    ansible.builtin.lineinfile:
      path: /etc/sudoers.d/aur_builder-allow-to-sudo-pacman
      state: present
      line: "aur_builder ALL=(ALL) NOPASSWD: /usr/bin/pacman"
      validate: /usr/sbin/visudo -cf %s
      create: yes
  - name: Full system upgrade
    community.general.pacman:
      update_cache: true
      upgrade: true
  - name: Install Git
    community.general.pacman:
      name: git
      state: present
  - name: Install user packages
    community.general.pacman:
      name:
        - unzip
        - vi
        - less
        - neovim
        - steam
        - discord
        - rust-analyzer
        - btop
        - bat
        - rust
        - nodejs
        - npm
        - dotnet-sdk
        - dotnet-runtime
        - aspnet-runtime
        - go
        - luarocks
        - jdk-openjdk
        - ruby
        - ruby-irb
        - rubygems
        - php
        - composer
        - github-cli
        - python-pip
        - python-pynvim 
        - ripgrep
        - fd
        - gpac
        - cpanminus
        - starship
        - gamemode
        - mangohud
        - lib32-gamemode
        - piper
        - fish
        - obsidian
        - kitty
        - syncthing
        - noto-fonts-emoji
        - gst-plugins-bad
        - gst-plugins-ugly
        - gst-libav
        - ttf-jetbrains-mono-nerd 
        - qt5-graphicaleffects
        - qt5-svg
        - qt5-quickcontrols2
        - bluez
        - bluez-utils
        - sddm-kcm
        - cups
        - cups-pdf
        - print-manager
        - system-config-printer
        - avahi
        - nss-mdns
        - nvidia-settings
        - spectacle
        - wireguard-tools
        - zellij
      state: present
  - name: Install ratbagd
    community.general.pacman:
      name:
        - libratbag
      state: present
    notify: Reload dbus
  - name: Install Paru
    become: yes
    become_user: "{{ user }}"
    kewlfft.aur.aur:
      name: paru
      use: makepkg
      state: present
  - name: Install AUR packages
    become: yes
    become_user: "{{ user }}"
    kewlfft.aur.aur:
      use: paru
      name:
        - zoom
        - bambustudio-bin
        - vmware-horizon-client
        - vmware-horizon-rtav
        - zoom-vmware-plugin
        - orca-slicer-bin
        - julia-bin
        - skypeforlinux-stable-bin
        - proton-vpn-gtk-app
        - syncthingtray-qt6
        - archlinux-themes-sddm
        - bottles
  - name: Download neovim files 
    become: yes
    become_user: "{{ user }}"
    ansible.builtin.git:
      repo: https://github.com/RodolpheFouquet/nvim-conf.git
      dest: "/home/{{ user }}/.config/nvim"
      depth: 1
      update: yes
  - name: Install neovim node.js package globally.
    community.general.npm:
      name: neovim
      global: true
  - name: Creates zellij config directory
    ansible.builtin.file:
      path: "/home/{{ user }}/.config/zellij" 
      state: directory
      mode: '0755'
  - name: Copy zellij config
    ansible.builtin.copy:
      src: assets/zellij.kdl
      dest: "/home/{{ user}}/.config/zellij/config.kdl"
      owner: "{{ user }}"
      group: "{{ user }}"
      mode: '0644'
  - name: Creates fish config directory
    ansible.builtin.file:
      path: "/home/{{ user }}/.config/fish" 
      state: directory
      mode: '0755'
  - name: Copy fish config
    ansible.builtin.copy:
      src: assets/config.fish
      dest: "/home/{{ user}}/.config/fish/config.fish"
      owner: "{{ user }}"
      group: "{{ user }}"
      mode: '0644'
  - name: Copy konsole color config
    ansible.builtin.copy:
      src: assets/mocha.colorscheme
      dest: "/home/{{ user}}/.local/share/konsole/mocha.colorscheme"
      owner: "{{ user }}"
      group: "{{ user }}"
      mode: '0644'
  - name: Copy konsole profile
    ansible.builtin.copy:
      src: assets/Vachicorne.profile
      dest: "/home/{{ user}}/.local/share/konsole/vachicorne.profile"
      owner: "{{ user }}"
      group: "{{ user }}"
      mode: '0644'
  - name: start syncthing service
    ansible.builtin.systemd_service:
      state: started
      enabled: true
      name: "syncthing@{{ user }}"
  - name: Download kde theme 
    become: yes
    become_user: "{{ user }}"
    ansible.builtin.git:
      repo: https://github.com/catppuccin/kde
      dest: "/home/{{ user }}/catppucin-kde"
      depth: 1
      update: yes
  - name: Download sddm theme 
    become: yes
    become_user: "{{ user }}"
    ansible.builtin.git:
      repo: https://github.com/catppuccin/sddm
      dest: "/home/{{ user }}/catppucin-sddm"
      depth: 1
      update: yes
  - name: Copy sddm theme
    ansible.builtin.copy:
      src: "/home/{{ user }}/catppucin-sddm/src/{{ sddm_theme }}"
      dest: "/usr/share/sddm/themes/"
      mode: '0755'
  - name: Creates sddm config dir
    ansible.builtin.file:
      path: "/etc/sddm.conf.d" 
      state: directory
      mode: '0755'
  - name: Enable sddm theme
    ansible.builtin.template:
      src: assets/sddm.j2
      dest: /etc/sddm.conf.d/theme.conf
      mode: '0644'
  - name: start bluetooth service
    ansible.builtin.systemd_service:
      state: started
      enabled: true
      name: "bluetooth"
  - name: Download kitty theme 
    become: yes
    become_user: "{{ user }}"
    ansible.builtin.git:
      repo: https://github.com/catppuccin/kitty
      dest: "/home/{{ user }}/kitty"
      depth: 1
      update: yes
  - name: Creates kitty theme directory
    become: yes
    become_user: "{{ user }}"
    ansible.builtin.file:
      path: "/home/{{ user }}/.config/kitty/themes" 
      state: directory
      mode: '0755'
  - name: Copy kitty theme
    ansible.builtin.copy:
      src: "/home/{{ user }}/kitty/themes/"
      dest: "/home/{{ user }}/.config/kitty/themes" 
      mode: '0644'
  - name: start cups service
    ansible.builtin.systemd_service:
      state: started
      enabled: true
      name: "cups"
  - name: start avahi service
    ansible.builtin.systemd_service:
      state: started
      enabled: true
      name: "avahi-daemon"
  - name: Copy nvidia config
    ansible.builtin.copy:
      src: assets/nvidia-power-management.conf
      dest: "/etc/modprobe.d/nvidia-power-management.conf"
      mode: '0644'
  - name: Copy bootloader config
    ansible.builtin.copy:
      src: assets/linux.conf
      dest: "/boot/loader/entries/linux.conf"
      mode: '0755'
  - name: Copy bootloader fallback config
    ansible.builtin.copy:
      src: assets/linux-fallback.conf
      dest: "/boot/loader/entries/linux-fallback.conf"
      mode: '0755'
  - name: Configure for game compatibility
    ansible.posix.sysctl:
      name: vm.max_map_count
      value: '2147483642'
      reload: true

  handlers:
  - name: Reload dbus
    ansible.builtin.systemd_service:
      state: restarted
      daemon_reload: true
      name: dbus
